------------------------------------------------------------------------------------------------Question--------------------------------------------------------------------------------------------------------------
You are given an integer n, return the fibonacci series till the nth(0-based indexing) term. Since the terms can become very large return the terms modulo 109+7.
------------------------------------------------------------------------------------------------Example--------------------------------------------------------------------------------------------------------------
Example 1:
Input:
n = 5
Output:
0 1 1 2 3 5
Explanation:
0 1 1 2 3 5 is the Fibonacci series up to the 5th term.

Example 2:
Input:
n = 10
Output:
0 1 1 2 3 5 8 13 21 34 55
Explanation:
0 1 1 2 3 5 8 13 21 34 55 is the Fibonacci series up to the 10th term.
------------------------------------------------------------------------------------------------Intution--------------------------------------------------------------------------------------------------------------
Initialization:
The array ans is initialized with a size of n + 1 to store the Fibonacci series elements.
The first two elements, ans[0] and ans[1], are explicitly set to 0 and 1, respectively, as they are the base cases of the Fibonacci series.

Generating Fibonacci Series:
A loop iterates from i = 2 to n, calculating each Fibonacci number in the series.
For each i, the Fibonacci number is calculated by adding the previous two Fibonacci numbers (ans[i-1] and ans[i-2]) and taking the modulo 
1
0
9
+
7
10 
9
 +7.
This ensures that each Fibonacci number is within the specified modulo range.

Returning the Result:
Once the loop completes, the array ans containing the Fibonacci series up to the nth term is returned.

Modular Arithmetic:
Modular arithmetic ensures that the Fibonacci numbers do not exceed the specified range. This is important to avoid integer overflow and to keep the numbers within manageable bounds
------------------------------------------------------------------------------------------------Code---------------------------------------------------------------------------------------------------------------

class Solution {

    int[] Series(int n) {
       int[] ans = new int[n+1];
        ans[0] = 0;
        ans[1] = 1;
        for(int i = 2; i <= n; i++){
            ans[i] = (ans[i-1]+ans[i-2])%1000000007;
        }
        return ans;
    }
}
