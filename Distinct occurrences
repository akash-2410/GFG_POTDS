class Solution

{    int mod=(int)1e9+7;
    int  subsequenceCount(String s, String t)
    {
	// Your code here
	int n=s.length();
	int m=t.length();
	int dp[][]=new int[n][m];
	for(int[] a:dp)
	Arrays.fill(a,-1);
	return solve(s,t,n,m,dp);
    }
    int solve(String s,String t,int n,int m,int dp[][]){
        if(m==0)
        return 1;
        if(n==0)
        return 0;
        if(dp[n-1][m-1]!=-1)
        return dp[n-1][m-1];
        if(s.charAt(n-1)==t.charAt(m-1))
        return dp[n-1][m-1]=(solve(s,t,n-1,m-1,dp)%mod+solve(s,t,n-1,m,dp)%mod)%mod;
        return dp[n-1][m-1]=solve(s,t,n-1,m,dp)%mod;
    }
}
