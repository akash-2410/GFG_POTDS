---------------------------------------------------------------------------------------------------Question----------------------------------------------------------------------------------------------------------
Given a string s of length n, find all the possible subsequences of the string s in lexicographically-sorted order.

--------------------------------------------------------------------------------------------------Example-----------------------------------------------------------------------------------------------------------
Example 1:
Input : 
s = "abc"
Output: 
a ab abc ac b bc c
Explanation : 
There are a total 7 number of subsequences possible 
for the given string, and they are mentioned above 
in lexicgraphically sorted order.

---------------------------------------------------------------------------------------------------Code--------------------------------------------------------------------------------------------------------------
class Solution
{
    void traverse(String s,int index, List<String>ans,StringBuilder temp){
        if(index==s.length()){
            if(temp.length()!=0) ans.add(temp.toString());
            return;
        }
        traverse(s,index+1,ans,temp);//take
        temp.append(s.charAt(index));
        traverse(s,index+1,ans,temp);//not take
        temp.deleteCharAt(temp.length()-1);
    }
    
    
    public List<String> AllPossibleStrings(String s)
    {
        List<String>ans =new ArrayList<>();
        StringBuilder temp=new StringBuilder();
        traverse(s,0,ans,temp);
        Collections.sort(ans);
        return ans;
    }
}

